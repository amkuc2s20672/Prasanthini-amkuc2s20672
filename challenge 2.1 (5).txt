Pinned by Answers dotcom
@answersdotcom-bg2lx
1 month ago
# 2.1 Implement a class called BankAccount that represents a bank account. The class should have private attributes for account number, account holder name, and account balance. Include methods to deposit money, withdraw money, and display the account balance. Ensure that the account balance cannot be accessed directly from outside the class. Write a program to create an instance of the BankAccount class and test the deposit and withdrawal functionality.
class BankAccount:

Certainly! Here's the implementation of the `BankAccount` class in Python:

```python
class BankAccount:
    def __init__(self, account_number, account_holder_name, account_balance):
        self.__account_number = account_number
        self.__account_holder_name = account_holder_name
        self.__account_balance = account_balance

    def deposit(self, amount):
        self.__account_balance += amount

    def withdraw(self, amount):
        if amount <= self.__account_balance:
            self.__account_balance -= amount
        else:
            print("Insufficient balance")

    def display_balance(self):
        print("Account Number:", self.__account_number)
        print("Account Holder Name:", self.__account_holder_name)
        print("Account Balance:", self.__account_balance)


# Testing the BankAccount class
account = BankAccount("1234", "John Doe", 1000)

account.display_balance()  # Initial balance

account.deposit(500)
account.display_balance()  # Balance after deposit

account.withdraw(200)
account.display_balance()  # Balance after withdrawal

account.withdraw(1500)     # Attempting to withdraw more than balance
```
